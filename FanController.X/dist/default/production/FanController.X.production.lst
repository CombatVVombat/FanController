

Microchip Technology PIC LITE Macro Assembler V1.21 build 54009 
                                                                                               Sat Jul 30 11:06:15 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 54009
     1                           	processor	12F683
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000E                     	;# 
    32  000E                     	;# 
    33  000F                     	;# 
    34  0010                     	;# 
    35  0011                     	;# 
    36  0012                     	;# 
    37  0013                     	;# 
    38  0013                     	;# 
    39  0014                     	;# 
    40  0015                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001E                     	;# 
    45  001F                     	;# 
    46  0081                     	;# 
    47  0085                     	;# 
    48  008C                     	;# 
    49  008E                     	;# 
    50  008F                     	;# 
    51  0090                     	;# 
    52  0092                     	;# 
    53  0095                     	;# 
    54  0095                     	;# 
    55  0096                     	;# 
    56  0096                     	;# 
    57  0099                     	;# 
    58  009A                     	;# 
    59  009A                     	;# 
    60  009B                     	;# 
    61  009C                     	;# 
    62  009D                     	;# 
    63  009E                     	;# 
    64  009F                     	;# 
    65  001F                     _ADCON0bits	set	31
    66  001E                     _ADRESH	set	30
    67  0015                     _CCP1CONbits	set	21
    68  0013                     _CCPR1L	set	19
    69  0005                     _GPIObits	set	5
    70  0012                     _T2CONbits	set	18
    71  0018                     _WDTCONbits	set	24
    72  009E                     _ADRESL	set	158
    73  009F                     _ANSELbits	set	159
    74  008F                     _OSCCONbits	set	143
    75  0092                     _PR2	set	146
    76  0085                     _TRISIObits	set	133
    77                           
    78                           	psect	text0
    79  0000                     __ptext0:	
    80                           
    81                           ;psect for function _SetupOscillator
    82                           ; #config settings
    83  0000                     
    84                           	psect	cinit
    85  07F7                     start_initialization:	
    86  07F7                     __initialization:	
    87                           
    88                           ; Clear objects allocated to BANK0
    89  07F7  01C1               	clrf	__pbssBANK0& (0+127)
    90  07F8  01C2               	clrf	(__pbssBANK0+1)& (0+127)
    91  07F9  01C3               	clrf	(__pbssBANK0+2)& (0+127)
    92  07FA  01C4               	clrf	(__pbssBANK0+3)& (0+127)
    93  07FB  01C5               	clrf	(__pbssBANK0+4)& (0+127)
    94  07FC  01C6               	clrf	(__pbssBANK0+5)& (0+127)
    95  07FD  01C7               	clrf	(__pbssBANK0+6)& (0+127)
    96  07FE                     end_of_initialization:	
    97                           ;End of C runtime variable initialization code
    98                           
    99  07FE                     __end_of__initialization:	
   100  07FE  0183               	clrf	3
   101  07FF  2DFA               	ljmp	_main	;jump to C main() function
   102                           
   103                           	psect	bssBANK0
   104  0041                     __pbssBANK0:	
   105  0041                     _adcValue:	
   106  0041                     	ds	2
   107  0043                     _delayLooper:	
   108  0043                     	ds	2
   109  0045                     _fanSpeed:	
   110  0045                     	ds	2
   111  0047                     _tempDegF:	
   112  0047                     	ds	1
   113                           
   114                           	psect	cstackCOMMON
   115  0070                     __pcstackCOMMON:	
   116  0070                     ?_SetupOscillator:	
   117  0070                     ??_SetupOscillator:	
   118                           ; 0 bytes @ 0x0
   119                           
   120  0070                     ?_SetupPinIO:	
   121                           ; 0 bytes @ 0x0
   122                           
   123  0070                     ??_SetupPinIO:	
   124                           ; 0 bytes @ 0x0
   125                           
   126  0070                     ?_SetupADC:	
   127                           ; 0 bytes @ 0x0
   128                           
   129  0070                     ??_SetupADC:	
   130                           ; 0 bytes @ 0x0
   131                           
   132  0070                     ?_SetupPWM:	
   133                           ; 0 bytes @ 0x0
   134                           
   135  0070                     ??_SetupPWM:	
   136                           ; 0 bytes @ 0x0
   137                           
   138  0070                     ?_rampToSpeed:	
   139                           ; 0 bytes @ 0x0
   140                           
   141  0070                     ?_readADC:	
   142                           ; 0 bytes @ 0x0
   143                           
   144  0070                     ?___wmul:	
   145                           ; 2 bytes @ 0x0
   146                           
   147  0070                     ?___lmul:	
   148                           ; 2 bytes @ 0x0
   149                           
   150  0070                     rampToSpeed@targetSpeed:	
   151                           ; 4 bytes @ 0x0
   152                           
   153  0070                     ___wmul@multiplier:	
   154                           ; 2 bytes @ 0x0
   155                           
   156  0070                     ___lmul@multiplier:	
   157                           ; 2 bytes @ 0x0
   158                           
   159                           
   160                           ; 4 bytes @ 0x0
   161  0070                     	ds	2
   162  0072                     ??_readADC:	
   163  0072                     ??_rampToSpeed:	
   164                           ; 0 bytes @ 0x2
   165                           
   166  0072                     ___wmul@multiplicand:	
   167                           ; 0 bytes @ 0x2
   168                           
   169                           
   170                           ; 2 bytes @ 0x2
   171  0072                     	ds	2
   172  0074                     ??___wmul:	
   173  0074                     readADC@result:	
   174                           ; 0 bytes @ 0x4
   175                           
   176  0074                     ___wmul@product:	
   177                           ; 2 bytes @ 0x4
   178                           
   179  0074                     ___lmul@multiplicand:	
   180                           ; 2 bytes @ 0x4
   181                           
   182                           
   183                           ; 4 bytes @ 0x4
   184  0074                     	ds	2
   185  0076                     ?_mapToDegF:	
   186  0076                     mapToDegF@adc:	
   187                           ; 1 bytes @ 0x6
   188                           
   189  0076                     rampToSpeed@command:	
   190                           ; 2 bytes @ 0x6
   191                           
   192                           
   193                           ; 2 bytes @ 0x6
   194  0076                     	ds	2
   195  0078                     ??_mapToDegF:	
   196  0078                     ??___lmul:	
   197                           ; 0 bytes @ 0x8
   198                           
   199  0078                     rampToSpeed@currentSpeed:	
   200                           ; 0 bytes @ 0x8
   201                           
   202                           
   203                           ; 2 bytes @ 0x8
   204  0078                     	ds	1
   205  0079                     ___lmul@product:	
   206                           
   207                           ; 4 bytes @ 0x9
   208  0079                     	ds	1
   209  007A                     mapToDegF@result:	
   210                           
   211                           ; 2 bytes @ 0xA
   212  007A                     	ds	3
   213  007D                     ??___lldiv:	
   214                           
   215                           ; 0 bytes @ 0xD
   216  007D                     	ds	1
   217                           
   218                           	psect	cstackBANK0
   219  0020                     __pcstackBANK0:	
   220  0020                     ?___lldiv:	
   221  0020                     ___lldiv@divisor:	
   222                           ; 4 bytes @ 0x0
   223                           
   224                           
   225                           ; 4 bytes @ 0x0
   226  0020                     	ds	4
   227  0024                     ___lldiv@dividend:	
   228                           
   229                           ; 4 bytes @ 0x4
   230  0024                     	ds	4
   231  0028                     ___lldiv@quotient:	
   232                           
   233                           ; 4 bytes @ 0x8
   234  0028                     	ds	4
   235  002C                     ___lldiv@counter:	
   236                           
   237                           ; 1 bytes @ 0xC
   238  002C                     	ds	1
   239  002D                     ?_getFanSpeed:	
   240                           
   241                           ; 2 bytes @ 0xD
   242  002D                     	ds	2
   243  002F                     ??_getFanSpeed:	
   244                           
   245                           ; 0 bytes @ 0xF
   246  002F                     	ds	4
   247  0033                     getFanSpeed@temp:	
   248                           
   249                           ; 4 bytes @ 0x13
   250  0033                     	ds	4
   251  0037                     getFanSpeed@fanSpeed:	
   252                           
   253                           ; 4 bytes @ 0x17
   254  0037                     	ds	4
   255  003B                     getFanSpeed@tempF:	
   256                           
   257                           ; 1 bytes @ 0x1B
   258  003B                     	ds	1
   259  003C                     ?_main:	
   260  003C                     main@argc:	
   261                           ; 2 bytes @ 0x1C
   262                           
   263                           
   264                           ; 2 bytes @ 0x1C
   265  003C                     	ds	2
   266  003E                     main@argv:	
   267                           
   268                           ; 2 bytes @ 0x1E
   269  003E                     	ds	2
   270  0040                     ??_main:	
   271                           
   272                           ; 0 bytes @ 0x20
   273  0040                     	ds	1
   274                           
   275                           	psect	maintext
   276  05FA                     __pmaintext:	
   277 ;;
   278 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   279 ;;
   280 ;; *************** function _main *****************
   281 ;; Defined at:
   282 ;;		line 150 in file "D:/Programming/LocalGit/FanController/FanController.X/main.c"
   283 ;; Parameters:    Size  Location     Type
   284 ;;  argc            2   28[BANK0 ] int 
   285 ;;  argv            2   30[BANK0 ] PTR PTR unsigned char 
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  2   28[BANK0 ] int 
   290 ;; Registers used:
   291 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : 17F/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1
   297 ;;      Params:         0       4       0
   298 ;;      Locals:         0       0       0
   299 ;;      Temps:          0       1       0
   300 ;;      Totals:         0       5       0
   301 ;;Total ram usage:        5 bytes
   302 ;; Hardware stack levels required when called:    2
   303 ;; This function calls:
   304 ;;		_SetupOscillator
   305 ;;		_SetupPinIO
   306 ;;		_SetupADC
   307 ;;		_SetupPWM
   308 ;;		_readADC
   309 ;;		_mapToDegF
   310 ;;		_getFanSpeed
   311 ;;		_rampToSpeed
   312 ;; This function is called by:
   313 ;;		Startup code after reset
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           
   318                           ;psect for function _main
   319  05FA                     _main:	
   320                           
   321                           ;main.c: 151: SetupOscillator();
   322                           
   323                           ;incstack = 0
   324                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   325  05FA  258E               	fcall	_SetupOscillator
   326                           
   327                           ;main.c: 152: SetupPinIO();
   328  05FB  2577               	fcall	_SetupPinIO
   329                           
   330                           ;main.c: 153: SetupPWM();
   331  05FC  259E               	fcall	_SetupPWM
   332                           
   333                           ;main.c: 154: SetupADC();
   334  05FD  2582               	fcall	_SetupADC
   335                           
   336                           ;main.c: 156: GPIObits.GP4 = 1;
   337  05FE  1283               	bcf	3,5	;RP0=0, select bank0
   338  05FF  1605               	bsf	5,4	;volatile
   339                           
   340                           ;main.c: 157: GPIObits.GP5 = 1;
   341  0600  1685               	bsf	5,5	;volatile
   342                           
   343                           ;main.c: 158: GPIObits.GP1 = 1;
   344  0601  1485               	bsf	5,1	;volatile
   345  0602                     l78:	
   346                           ;main.c: 160: while(1)
   347                           
   348  0602  0064               	clrwdt	;# 
   349                           
   350                           ;main.c: 163: adcValue = readADC();
   351  0603  25D5               	fcall	_readADC
   352  0604  0871               	movf	?_readADC+1,w
   353  0605  1283               	bcf	3,5	;RP0=0, select bank0
   354  0606  01C2               	clrf	_adcValue+1
   355  0607  07C2               	addwf	_adcValue+1,f
   356  0608  0870               	movf	?_readADC,w
   357  0609  01C1               	clrf	_adcValue
   358  060A  07C1               	addwf	_adcValue,f
   359                           
   360                           ;main.c: 164: tempDegF = mapToDegF(adcValue);
   361  060B  0842               	movf	_adcValue+1,w
   362  060C  01F7               	clrf	?_mapToDegF+1
   363  060D  07F7               	addwf	?_mapToDegF+1,f
   364  060E  0841               	movf	_adcValue,w
   365  060F  01F6               	clrf	?_mapToDegF
   366  0610  07F6               	addwf	?_mapToDegF,f
   367  0611  2666               	fcall	_mapToDegF
   368  0612  1283               	bcf	3,5	;RP0=0, select bank0
   369  0613  00C0               	movwf	??_main
   370  0614  0840               	movf	??_main,w
   371  0615  00C7               	movwf	_tempDegF
   372                           
   373                           ;main.c: 165: fanSpeed = getFanSpeed(tempDegF);
   374  0616  0847               	movf	_tempDegF,w
   375  0617  2773               	fcall	_getFanSpeed
   376  0618  1283               	bcf	3,5	;RP0=0, select bank0
   377  0619  082E               	movf	?_getFanSpeed+1,w
   378  061A  01C6               	clrf	_fanSpeed+1
   379  061B  07C6               	addwf	_fanSpeed+1,f
   380  061C  082D               	movf	?_getFanSpeed,w
   381  061D  01C5               	clrf	_fanSpeed
   382  061E  07C5               	addwf	_fanSpeed,f
   383                           
   384                           ;main.c: 166: rampToSpeed(fanSpeed);
   385  061F  0846               	movf	_fanSpeed+1,w
   386  0620  01F1               	clrf	?_rampToSpeed+1
   387  0621  07F1               	addwf	?_rampToSpeed+1,f
   388  0622  0845               	movf	_fanSpeed,w
   389  0623  01F0               	clrf	?_rampToSpeed
   390  0624  07F0               	addwf	?_rampToSpeed,f
   391  0625  26B7               	fcall	_rampToSpeed
   392  0626  2E02               	goto	l78
   393  0627                     __end_of_main:	
   394                           ;main.c: 167: }
   395                           ;main.c: 169: return (0);
   396                           ;	Return value of _main is never used
   397                           
   398                           
   399                           	psect	text1
   400  06B7                     __ptext1:	
   401 ;; *************** function _rampToSpeed *****************
   402 ;; Defined at:
   403 ;;		line 132 in file "D:/Programming/LocalGit/FanController/FanController.X/main.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;  targetSpeed     2    0[COMMON] const unsigned int 
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  currentSpeed    2    8[COMMON] unsigned int 
   408 ;;  command         2    6[COMMON] unsigned int 
   409 ;; Return value:  Size  Location     Type
   410 ;;		None               void
   411 ;; Registers used:
   412 ;;		wreg, status,2, status,0
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMMON   BANK0   BANK1
   418 ;;      Params:         2       0       0
   419 ;;      Locals:         4       0       0
   420 ;;      Temps:          4       0       0
   421 ;;      Totals:        10       0       0
   422 ;;Total ram usage:       10 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; This function calls:
   425 ;;		Nothing
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           
   432                           ;psect for function _rampToSpeed
   433  06B7                     _rampToSpeed:	
   434                           
   435                           ;main.c: 133: uint16_t currentSpeed = (CCPR1L<<2) + CCP1CONbits.DC1B;
   436                           
   437                           ;incstack = 0
   438                           ; Regs used in _rampToSpeed: [wreg+status,2+status,0]
   439  06B7  1283               	bcf	3,5	;RP0=0, select bank0
   440  06B8  0813               	movf	19,w	;volatile
   441  06B9  00F2               	movwf	??_rampToSpeed
   442  06BA  01F3               	clrf	??_rampToSpeed+1
   443  06BB  1003               	clrc
   444  06BC  0DF2               	rlf	??_rampToSpeed,f
   445  06BD  0DF3               	rlf	??_rampToSpeed+1,f
   446  06BE  1003               	clrc
   447  06BF  0DF2               	rlf	??_rampToSpeed,f
   448  06C0  0DF3               	rlf	??_rampToSpeed+1,f
   449  06C1  0E15               	swapf	21,w	;volatile
   450  06C2  3903               	andlw	3
   451  06C3  0772               	addwf	??_rampToSpeed,w
   452  06C4  00F4               	movwf	??_rampToSpeed+2
   453  06C5  3000               	movlw	0
   454  06C6  1803               	skipnc
   455  06C7  3001               	movlw	1
   456  06C8  0773               	addwf	??_rampToSpeed+1,w
   457  06C9  00F5               	movwf	??_rampToSpeed+3
   458  06CA  0874               	movf	??_rampToSpeed+2,w
   459  06CB  00F8               	movwf	rampToSpeed@currentSpeed
   460  06CC  0875               	movf	??_rampToSpeed+3,w
   461  06CD  00F9               	movwf	rampToSpeed@currentSpeed+1
   462                           
   463                           ;main.c: 134: uint16_t command = currentSpeed;
   464  06CE  0879               	movf	rampToSpeed@currentSpeed+1,w
   465  06CF  01F7               	clrf	rampToSpeed@command+1
   466  06D0  07F7               	addwf	rampToSpeed@command+1,f
   467  06D1  0878               	movf	rampToSpeed@currentSpeed,w
   468  06D2  01F6               	clrf	rampToSpeed@command
   469  06D3  07F6               	addwf	rampToSpeed@command,f
   470                           
   471                           ;main.c: 136: ++delayLooper;
   472  06D4  3001               	movlw	1
   473  06D5  07C3               	addwf	_delayLooper,f
   474  06D6  1803               	skipnc
   475  06D7  0AC4               	incf	_delayLooper+1,f
   476  06D8  3000               	movlw	0
   477  06D9  07C4               	addwf	_delayLooper+1,f
   478                           
   479                           ;main.c: 137: if(delayLooper > 5)
   480  06DA  3000               	movlw	0
   481  06DB  0244               	subwf	_delayLooper+1,w
   482  06DC  3006               	movlw	6
   483  06DD  1903               	skipnz
   484  06DE  0243               	subwf	_delayLooper,w
   485  06DF  1C03               	skipc
   486  06E0  2EFF               	goto	l834
   487                           
   488                           ;main.c: 138: {
   489                           ;main.c: 139: delayLooper = 0;
   490  06E1  01C3               	clrf	_delayLooper
   491  06E2  01C4               	clrf	_delayLooper+1
   492                           
   493                           ;main.c: 140: if(targetSpeed > currentSpeed)
   494  06E3  0871               	movf	rampToSpeed@targetSpeed+1,w
   495  06E4  0279               	subwf	rampToSpeed@currentSpeed+1,w
   496  06E5  1D03               	skipz
   497  06E6  2EE9               	goto	u315
   498  06E7  0870               	movf	rampToSpeed@targetSpeed,w
   499  06E8  0278               	subwf	rampToSpeed@currentSpeed,w
   500  06E9                     u315:	
   501  06E9  1803               	skipnc
   502  06EA  2EF1               	goto	l73
   503                           
   504                           ;main.c: 141: ++command;
   505  06EB  3001               	movlw	1
   506  06EC  07F6               	addwf	rampToSpeed@command,f
   507  06ED  1803               	skipnc
   508  06EE  0AF7               	incf	rampToSpeed@command+1,f
   509  06EF  3000               	movlw	0
   510  06F0  07F7               	addwf	rampToSpeed@command+1,f
   511  06F1                     l73:	
   512                           
   513                           ;main.c: 142: if(targetSpeed < currentSpeed)
   514  06F1  0879               	movf	rampToSpeed@currentSpeed+1,w
   515  06F2  0271               	subwf	rampToSpeed@targetSpeed+1,w
   516  06F3  1D03               	skipz
   517  06F4  2EF7               	goto	u325
   518  06F5  0878               	movf	rampToSpeed@currentSpeed,w
   519  06F6  0270               	subwf	rampToSpeed@targetSpeed,w
   520  06F7                     u325:	
   521  06F7  1803               	skipnc
   522  06F8  2EFF               	goto	l834
   523                           
   524                           ;main.c: 143: --command;
   525  06F9  3001               	movlw	1
   526  06FA  02F6               	subwf	rampToSpeed@command,f
   527  06FB  3000               	movlw	0
   528  06FC  1C03               	skipc
   529  06FD  03F7               	decf	rampToSpeed@command+1,f
   530  06FE  02F7               	subwf	rampToSpeed@command+1,f
   531  06FF                     l834:	
   532                           
   533                           ;main.c: 144: }
   534                           ;main.c: 145: CCP1CONbits.DC1B = command;
   535  06FF  0876               	movf	rampToSpeed@command,w
   536  0700  00F2               	movwf	??_rampToSpeed
   537  0701  0EF2               	swapf	??_rampToSpeed,f
   538  0702  0815               	movf	21,w	;volatile
   539  0703  0672               	xorwf	??_rampToSpeed,w
   540  0704  39CF               	andlw	-49
   541  0705  0672               	xorwf	??_rampToSpeed,w
   542  0706  0095               	movwf	21	;volatile
   543                           
   544                           ;main.c: 146: CCPR1L = (command>>2);
   545  0707  0877               	movf	rampToSpeed@command+1,w
   546  0708  00F3               	movwf	??_rampToSpeed+1
   547  0709  0876               	movf	rampToSpeed@command,w
   548  070A  00F2               	movwf	??_rampToSpeed
   549  070B  1003               	clrc
   550  070C  0CF3               	rrf	??_rampToSpeed+1,f
   551  070D  0CF2               	rrf	??_rampToSpeed,f
   552  070E  1003               	clrc
   553  070F  0CF3               	rrf	??_rampToSpeed+1,f
   554  0710  0CF2               	rrf	??_rampToSpeed,f
   555  0711  0872               	movf	??_rampToSpeed,w
   556  0712  0093               	movwf	19	;volatile
   557  0713  0008               	return
   558  0714                     __end_of_rampToSpeed:	
   559                           
   560                           	psect	text2
   561  0773                     __ptext2:	
   562 ;; *************** function _getFanSpeed *****************
   563 ;; Defined at:
   564 ;;		line 115 in file "D:/Programming/LocalGit/FanController/FanController.X/main.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  tempF           1    wreg     const unsigned char 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  tempF           1   27[BANK0 ] const unsigned char 
   569 ;;  fanSpeed        4   23[BANK0 ] unsigned long 
   570 ;;  temp            4   19[BANK0 ] unsigned long 
   571 ;; Return value:  Size  Location     Type
   572 ;;                  2   13[BANK0 ] unsigned int 
   573 ;; Registers used:
   574 ;;		wreg, status,2, status,0, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1
   580 ;;      Params:         0       2       0
   581 ;;      Locals:         0       9       0
   582 ;;      Temps:          0       4       0
   583 ;;      Totals:         0      15       0
   584 ;;Total ram usage:       15 bytes
   585 ;; Hardware stack levels used:    1
   586 ;; Hardware stack levels required when called:    1
   587 ;; This function calls:
   588 ;;		___lldiv
   589 ;;		___lmul
   590 ;; This function is called by:
   591 ;;		_main
   592 ;; This function uses a non-reentrant model
   593 ;;
   594                           
   595                           
   596                           ;psect for function _getFanSpeed
   597  0773                     _getFanSpeed:	
   598                           
   599                           ;incstack = 0
   600                           ; Regs used in _getFanSpeed: [wreg+status,2+status,0+pclath+cstack]
   601                           ;getFanSpeed@tempF stored from wreg
   602  0773  1283               	bcf	3,5	;RP0=0, select bank0
   603  0774  00BB               	movwf	getFanSpeed@tempF
   604                           
   605                           ;main.c: 117: uint32_t fanSpeed;
   606                           ;main.c: 118: uint32_t temp = (uint16_t)tempF;
   607  0775  083B               	movf	getFanSpeed@tempF,w
   608  0776  00AF               	movwf	??_getFanSpeed
   609  0777  01B0               	clrf	??_getFanSpeed+1
   610  0778  01B1               	clrf	??_getFanSpeed+2
   611  0779  01B2               	clrf	??_getFanSpeed+3
   612  077A  0832               	movf	??_getFanSpeed+3,w
   613  077B  00B6               	movwf	getFanSpeed@temp+3
   614  077C  0831               	movf	??_getFanSpeed+2,w
   615  077D  00B5               	movwf	getFanSpeed@temp+2
   616  077E  0830               	movf	??_getFanSpeed+1,w
   617  077F  00B4               	movwf	getFanSpeed@temp+1
   618  0780  082F               	movf	??_getFanSpeed,w
   619  0781  00B3               	movwf	getFanSpeed@temp
   620                           
   621                           ;main.c: 119: if(tempF < 165)
   622  0782  30A5               	movlw	165
   623  0783  023B               	subwf	getFanSpeed@tempF,w
   624  0784  1803               	skipnc
   625  0785  2F8E               	goto	l932
   626                           
   627                           ;main.c: 120: fanSpeed = 0;
   628  0786  3000               	movlw	0
   629  0787  00BA               	movwf	getFanSpeed@fanSpeed+3
   630  0788  3000               	movlw	0
   631  0789  00B9               	movwf	getFanSpeed@fanSpeed+2
   632  078A  3000               	movlw	0
   633  078B  00B8               	movwf	getFanSpeed@fanSpeed+1
   634  078C  3000               	movlw	0
   635  078D  2FD7               	goto	L1
   636  078E                     l932:	
   637                           
   638                           ;main.c: 121: else if(tempF >= 165)
   639  078E  30A5               	movlw	165
   640  078F  023B               	subwf	getFanSpeed@tempF,w
   641  0790  1C03               	skipc
   642  0791  2FD8               	goto	l936
   643                           
   644                           ;main.c: 122: fanSpeed = ((temp * 3836) / 100) - 6074;
   645  0792  3046               	movlw	70
   646  0793  00AF               	movwf	??_getFanSpeed
   647  0794  30E8               	movlw	232
   648  0795  00B0               	movwf	??_getFanSpeed+1
   649  0796  30FF               	movlw	255
   650  0797  00B1               	movwf	??_getFanSpeed+2
   651  0798  30FF               	movlw	255
   652  0799  00B2               	movwf	??_getFanSpeed+3
   653  079A  3000               	movlw	0
   654  079B  00A3               	movwf	?___lldiv+3
   655  079C  3000               	movlw	0
   656  079D  00A2               	movwf	?___lldiv+2
   657  079E  3000               	movlw	0
   658  079F  00A1               	movwf	?___lldiv+1
   659  07A0  3064               	movlw	100
   660  07A1  00A0               	movwf	?___lldiv
   661  07A2  0836               	movf	getFanSpeed@temp+3,w
   662  07A3  00F3               	movwf	?___lmul+3
   663  07A4  0835               	movf	getFanSpeed@temp+2,w
   664  07A5  00F2               	movwf	?___lmul+2
   665  07A6  0834               	movf	getFanSpeed@temp+1,w
   666  07A7  00F1               	movwf	?___lmul+1
   667  07A8  0833               	movf	getFanSpeed@temp,w
   668  07A9  00F0               	movwf	?___lmul
   669  07AA  3000               	movlw	0
   670  07AB  00F7               	movwf	?___lmul+7
   671  07AC  3000               	movlw	0
   672  07AD  00F6               	movwf	?___lmul+6
   673  07AE  300E               	movlw	14
   674  07AF  00F5               	movwf	?___lmul+5
   675  07B0  30FC               	movlw	252
   676  07B1  00F4               	movwf	?___lmul+4
   677  07B2  2627               	fcall	___lmul
   678  07B3  0873               	movf	?___lmul+3,w
   679  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   680  07B5  00A7               	movwf	?___lldiv+7
   681  07B6  0872               	movf	?___lmul+2,w
   682  07B7  00A6               	movwf	?___lldiv+6
   683  07B8  0871               	movf	?___lmul+1,w
   684  07B9  00A5               	movwf	?___lldiv+5
   685  07BA  0870               	movf	?___lmul,w
   686  07BB  00A4               	movwf	?___lldiv+4
   687  07BC  2714               	fcall	___lldiv
   688  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   689  07BE  0820               	movf	?___lldiv,w
   690  07BF  07AF               	addwf	??_getFanSpeed,f
   691  07C0  0821               	movf	?___lldiv+1,w
   692  07C1  1803               	skipnc
   693  07C2  0F21               	incfsz	?___lldiv+1,w
   694  07C3  2FC5               	goto	u550
   695  07C4  2FC6               	goto	u551
   696  07C5                     u550:	
   697  07C5  07B0               	addwf	??_getFanSpeed+1,f
   698  07C6                     u551:	
   699  07C6  0822               	movf	?___lldiv+2,w
   700  07C7  1803               	skipnc
   701  07C8  0F22               	incfsz	?___lldiv+2,w
   702  07C9  2FCB               	goto	u552
   703  07CA  2FCC               	goto	u553
   704  07CB                     u552:	
   705  07CB  07B1               	addwf	??_getFanSpeed+2,f
   706  07CC                     u553:	
   707  07CC  0823               	movf	?___lldiv+3,w
   708  07CD  1803               	skipnc
   709  07CE  0A23               	incf	?___lldiv+3,w
   710  07CF  07B2               	addwf	??_getFanSpeed+3,f
   711  07D0  0832               	movf	??_getFanSpeed+3,w
   712  07D1  00BA               	movwf	getFanSpeed@fanSpeed+3
   713  07D2  0831               	movf	??_getFanSpeed+2,w
   714  07D3  00B9               	movwf	getFanSpeed@fanSpeed+2
   715  07D4  0830               	movf	??_getFanSpeed+1,w
   716  07D5  00B8               	movwf	getFanSpeed@fanSpeed+1
   717  07D6  082F               	movf	??_getFanSpeed,w
   718  07D7                     L1:	
   719  07D7  00B7               	movwf	getFanSpeed@fanSpeed
   720  07D8                     l936:	
   721                           
   722                           ;main.c: 124: if(fanSpeed > 1023)
   723  07D8  3000               	movlw	0
   724  07D9  023A               	subwf	getFanSpeed@fanSpeed+3,w
   725  07DA  1D03               	skipz
   726  07DB  2FE6               	goto	u565
   727  07DC  3000               	movlw	0
   728  07DD  0239               	subwf	getFanSpeed@fanSpeed+2,w
   729  07DE  1D03               	skipz
   730  07DF  2FE6               	goto	u565
   731  07E0  3004               	movlw	4
   732  07E1  0238               	subwf	getFanSpeed@fanSpeed+1,w
   733  07E2  1D03               	skipz
   734  07E3  2FE6               	goto	u565
   735  07E4  3000               	movlw	0
   736  07E5  0237               	subwf	getFanSpeed@fanSpeed,w
   737  07E6                     u565:	
   738  07E6  1C03               	skipc
   739  07E7  2FF0               	goto	l940
   740                           
   741                           ;main.c: 125: fanSpeed = 1023;
   742  07E8  3000               	movlw	0
   743  07E9  00BA               	movwf	getFanSpeed@fanSpeed+3
   744  07EA  3000               	movlw	0
   745  07EB  00B9               	movwf	getFanSpeed@fanSpeed+2
   746  07EC  3003               	movlw	3
   747  07ED  00B8               	movwf	getFanSpeed@fanSpeed+1
   748  07EE  30FF               	movlw	255
   749  07EF  00B7               	movwf	getFanSpeed@fanSpeed
   750  07F0                     l940:	
   751                           
   752                           ;main.c: 127: return (uint16_t)fanSpeed;
   753  07F0  0838               	movf	getFanSpeed@fanSpeed+1,w
   754  07F1  01AE               	clrf	?_getFanSpeed+1
   755  07F2  07AE               	addwf	?_getFanSpeed+1,f
   756  07F3  0837               	movf	getFanSpeed@fanSpeed,w
   757  07F4  01AD               	clrf	?_getFanSpeed
   758  07F5  07AD               	addwf	?_getFanSpeed,f
   759  07F6  0008               	return
   760  07F7                     __end_of_getFanSpeed:	
   761                           
   762                           	psect	text3
   763  0627                     __ptext3:	
   764 ;; *************** function ___lmul *****************
   765 ;; Defined at:
   766 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v1.21\sources\pic\lmul.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;  multiplier      4    0[COMMON] unsigned long 
   769 ;;  multiplicand    4    4[COMMON] unsigned long 
   770 ;; Auto vars:     Size  Location     Type
   771 ;;  product         4    9[COMMON] unsigned long 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  4    0[COMMON] unsigned long 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1
   781 ;;      Params:         8       0       0
   782 ;;      Locals:         4       0       0
   783 ;;      Temps:          1       0       0
   784 ;;      Totals:        13       0       0
   785 ;;Total ram usage:       13 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_getFanSpeed
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           
   795                           ;psect for function ___lmul
   796  0627                     ___lmul:	
   797                           
   798                           ;incstack = 0
   799                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   800  0627  3000               	movlw	0
   801  0628  00FC               	movwf	___lmul@product+3
   802  0629  3000               	movlw	0
   803  062A  00FB               	movwf	___lmul@product+2
   804  062B  3000               	movlw	0
   805  062C  00FA               	movwf	___lmul@product+1
   806  062D  3000               	movlw	0
   807  062E  00F9               	movwf	___lmul@product
   808  062F                     l840:	
   809  062F  1C70               	btfss	___lmul@multiplier,0
   810  0630  2E45               	goto	l844
   811  0631  0874               	movf	___lmul@multiplicand,w
   812  0632  07F9               	addwf	___lmul@product,f
   813  0633  0875               	movf	___lmul@multiplicand+1,w
   814  0634  1103               	clrz
   815  0635  1803               	skipnc
   816  0636  3E01               	addlw	1
   817  0637  1D03               	btfss	3,2
   818  0638  07FA               	addwf	___lmul@product+1,f
   819  0639  0876               	movf	___lmul@multiplicand+2,w
   820  063A  1103               	clrz
   821  063B  1803               	skipnc
   822  063C  3E01               	addlw	1
   823  063D  1D03               	btfss	3,2
   824  063E  07FB               	addwf	___lmul@product+2,f
   825  063F  0877               	movf	___lmul@multiplicand+3,w
   826  0640  1103               	clrz
   827  0641  1803               	skipnc
   828  0642  3E01               	addlw	1
   829  0643  1D03               	btfss	3,2
   830  0644  07FC               	addwf	___lmul@product+3,f
   831  0645                     l844:	
   832  0645  3001               	movlw	1
   833  0646  00F8               	movwf	??___lmul
   834  0647                     u355:	
   835  0647  1003               	clrc
   836  0648  0DF4               	rlf	___lmul@multiplicand,f
   837  0649  0DF5               	rlf	___lmul@multiplicand+1,f
   838  064A  0DF6               	rlf	___lmul@multiplicand+2,f
   839  064B  0DF7               	rlf	___lmul@multiplicand+3,f
   840  064C  0BF8               	decfsz	??___lmul,f
   841  064D  2E47               	goto	u355
   842  064E  3001               	movlw	1
   843  064F                     u365:	
   844  064F  1003               	clrc
   845  0650  0CF3               	rrf	___lmul@multiplier+3,f
   846  0651  0CF2               	rrf	___lmul@multiplier+2,f
   847  0652  0CF1               	rrf	___lmul@multiplier+1,f
   848  0653  0CF0               	rrf	___lmul@multiplier,f
   849  0654  3EFF               	addlw	-1
   850  0655  1D03               	skipz
   851  0656  2E4F               	goto	u365
   852  0657  0873               	movf	___lmul@multiplier+3,w
   853  0658  0472               	iorwf	___lmul@multiplier+2,w
   854  0659  0471               	iorwf	___lmul@multiplier+1,w
   855  065A  0470               	iorwf	___lmul@multiplier,w
   856  065B  1D03               	skipz
   857  065C  2E2F               	goto	l840
   858  065D  087C               	movf	___lmul@product+3,w
   859  065E  00F3               	movwf	?___lmul+3
   860  065F  087B               	movf	___lmul@product+2,w
   861  0660  00F2               	movwf	?___lmul+2
   862  0661  087A               	movf	___lmul@product+1,w
   863  0662  00F1               	movwf	?___lmul+1
   864  0663  0879               	movf	___lmul@product,w
   865  0664  00F0               	movwf	?___lmul
   866  0665  0008               	return
   867  0666                     __end_of___lmul:	
   868                           
   869                           	psect	text4
   870  0714                     __ptext4:	
   871 ;; *************** function ___lldiv *****************
   872 ;; Defined at:
   873 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v1.21\sources\pic\lldiv.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  divisor         4    0[BANK0 ] unsigned long 
   876 ;;  dividend        4    4[BANK0 ] unsigned long 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  quotient        4    8[BANK0 ] unsigned long 
   879 ;;  counter         1   12[BANK0 ] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  4    0[BANK0 ] unsigned long 
   882 ;; Registers used:
   883 ;;		wreg, status,2, status,0
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1
   889 ;;      Params:         0       8       0
   890 ;;      Locals:         0       5       0
   891 ;;      Temps:          1       0       0
   892 ;;      Totals:         1      13       0
   893 ;;Total ram usage:       14 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_getFanSpeed
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           
   903                           ;psect for function ___lldiv
   904  0714                     ___lldiv:	
   905                           
   906                           ;incstack = 0
   907                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   908  0714  3000               	movlw	0
   909  0715  1283               	bcf	3,5	;RP0=0, select bank0
   910  0716  00AB               	movwf	___lldiv@quotient+3
   911  0717  3000               	movlw	0
   912  0718  00AA               	movwf	___lldiv@quotient+2
   913  0719  3000               	movlw	0
   914  071A  00A9               	movwf	___lldiv@quotient+1
   915  071B  3000               	movlw	0
   916  071C  00A8               	movwf	___lldiv@quotient
   917  071D  0823               	movf	___lldiv@divisor+3,w
   918  071E  0422               	iorwf	___lldiv@divisor+2,w
   919  071F  0421               	iorwf	___lldiv@divisor+1,w
   920  0720  0420               	iorwf	___lldiv@divisor,w
   921  0721  1903               	skipnz
   922  0722  2F6A               	goto	l924
   923  0723  01AC               	clrf	___lldiv@counter
   924  0724  0AAC               	incf	___lldiv@counter,f
   925  0725                     l910:	
   926  0725  1BA3               	btfsc	___lldiv@divisor+3,7
   927  0726  2F35               	goto	l912
   928  0727  3001               	movlw	1
   929  0728  00FD               	movwf	??___lldiv
   930  0729                     u475:	
   931  0729  1003               	clrc
   932  072A  0DA0               	rlf	___lldiv@divisor,f
   933  072B  0DA1               	rlf	___lldiv@divisor+1,f
   934  072C  0DA2               	rlf	___lldiv@divisor+2,f
   935  072D  0DA3               	rlf	___lldiv@divisor+3,f
   936  072E  0BFD               	decfsz	??___lldiv,f
   937  072F  2F29               	goto	u475
   938  0730  3001               	movlw	1
   939  0731  00FD               	movwf	??___lldiv
   940  0732  087D               	movf	??___lldiv,w
   941  0733  07AC               	addwf	___lldiv@counter,f
   942  0734  2F25               	goto	l910
   943  0735                     l912:	
   944  0735  3001               	movlw	1
   945  0736  00FD               	movwf	??___lldiv
   946  0737                     u495:	
   947  0737  1003               	clrc
   948  0738  0DA8               	rlf	___lldiv@quotient,f
   949  0739  0DA9               	rlf	___lldiv@quotient+1,f
   950  073A  0DAA               	rlf	___lldiv@quotient+2,f
   951  073B  0DAB               	rlf	___lldiv@quotient+3,f
   952  073C  0BFD               	decfsz	??___lldiv,f
   953  073D  2F37               	goto	u495
   954  073E  0823               	movf	___lldiv@divisor+3,w
   955  073F  0227               	subwf	___lldiv@dividend+3,w
   956  0740  1D03               	skipz
   957  0741  2F4C               	goto	u505
   958  0742  0822               	movf	___lldiv@divisor+2,w
   959  0743  0226               	subwf	___lldiv@dividend+2,w
   960  0744  1D03               	skipz
   961  0745  2F4C               	goto	u505
   962  0746  0821               	movf	___lldiv@divisor+1,w
   963  0747  0225               	subwf	___lldiv@dividend+1,w
   964  0748  1D03               	skipz
   965  0749  2F4C               	goto	u505
   966  074A  0820               	movf	___lldiv@divisor,w
   967  074B  0224               	subwf	___lldiv@dividend,w
   968  074C                     u505:	
   969  074C  1C03               	skipc
   970  074D  2F5D               	goto	l920
   971  074E  0820               	movf	___lldiv@divisor,w
   972  074F  02A4               	subwf	___lldiv@dividend,f
   973  0750  0821               	movf	___lldiv@divisor+1,w
   974  0751  1C03               	skipc
   975  0752  0F21               	incfsz	___lldiv@divisor+1,w
   976  0753  02A5               	subwf	___lldiv@dividend+1,f
   977  0754  0822               	movf	___lldiv@divisor+2,w
   978  0755  1C03               	skipc
   979  0756  0F22               	incfsz	___lldiv@divisor+2,w
   980  0757  02A6               	subwf	___lldiv@dividend+2,f
   981  0758  0823               	movf	___lldiv@divisor+3,w
   982  0759  1C03               	skipc
   983  075A  0F23               	incfsz	___lldiv@divisor+3,w
   984  075B  02A7               	subwf	___lldiv@dividend+3,f
   985  075C  1428               	bsf	___lldiv@quotient,0
   986  075D                     l920:	
   987  075D  3001               	movlw	1
   988  075E                     u515:	
   989  075E  1003               	clrc
   990  075F  0CA3               	rrf	___lldiv@divisor+3,f
   991  0760  0CA2               	rrf	___lldiv@divisor+2,f
   992  0761  0CA1               	rrf	___lldiv@divisor+1,f
   993  0762  0CA0               	rrf	___lldiv@divisor,f
   994  0763  3EFF               	addlw	-1
   995  0764  1D03               	skipz
   996  0765  2F5E               	goto	u515
   997  0766  3001               	movlw	1
   998  0767  02AC               	subwf	___lldiv@counter,f
   999  0768  1D03               	btfss	3,2
  1000  0769  2F35               	goto	l912
  1001  076A                     l924:	
  1002  076A  082B               	movf	___lldiv@quotient+3,w
  1003  076B  00A3               	movwf	?___lldiv+3
  1004  076C  082A               	movf	___lldiv@quotient+2,w
  1005  076D  00A2               	movwf	?___lldiv+2
  1006  076E  0829               	movf	___lldiv@quotient+1,w
  1007  076F  00A1               	movwf	?___lldiv+1
  1008  0770  0828               	movf	___lldiv@quotient,w
  1009  0771  00A0               	movwf	?___lldiv
  1010  0772  0008               	return
  1011  0773                     __end_of___lldiv:	
  1012                           
  1013                           	psect	text5
  1014  0666                     __ptext5:	
  1015 ;; *************** function _mapToDegF *****************
  1016 ;; Defined at:
  1017 ;;		line 94 in file "D:/Programming/LocalGit/FanController/FanController.X/main.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  adc             2    6[COMMON] const unsigned int 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  result          2   10[COMMON] unsigned int 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      unsigned char 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0, pclath, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0   BANK1
  1031 ;;      Params:         2       0       0
  1032 ;;      Locals:         2       0       0
  1033 ;;      Temps:          2       0       0
  1034 ;;      Totals:         6       0       0
  1035 ;;Total ram usage:        6 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    1
  1038 ;; This function calls:
  1039 ;;		___wmul
  1040 ;; This function is called by:
  1041 ;;		_main
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           
  1046                           ;psect for function _mapToDegF
  1047  0666                     _mapToDegF:	
  1048                           
  1049                           ;main.c: 95: if(adc < 281)
  1050                           
  1051                           ;incstack = 0
  1052                           ; Regs used in _mapToDegF: [wreg+status,2+status,0+pclath+cstack]
  1053  0666  3001               	movlw	1
  1054  0667  0277               	subwf	mapToDegF@adc+1,w
  1055  0668  3019               	movlw	25
  1056  0669  1903               	skipnz
  1057  066A  0276               	subwf	mapToDegF@adc,w
  1058  066B  1803               	skipnc
  1059  066C  2E6F               	goto	l884
  1060                           
  1061                           ;main.c: 96: {
  1062                           ;main.c: 97: return 245;
  1063  066D  30F5               	movlw	245
  1064                           
  1065                           ;main.c: 98: }
  1066  066E  0008               	return
  1067  066F                     l884:	
  1068                           
  1069                           ;main.c: 99: else if(adc > 837)
  1070  066F  3003               	movlw	3
  1071  0670  0277               	subwf	mapToDegF@adc+1,w
  1072  0671  3046               	movlw	70
  1073  0672  1903               	skipnz
  1074  0673  0276               	subwf	mapToDegF@adc,w
  1075  0674  1C03               	skipc
  1076  0675  2E78               	goto	l892
  1077                           
  1078                           ;main.c: 100: {
  1079                           ;main.c: 101: return 113;
  1080  0676  3071               	movlw	113
  1081                           
  1082                           ;main.c: 102: }
  1083  0677  0008               	return
  1084  0678                     l892:	
  1085                           
  1086                           ;main.c: 103: else
  1087                           ;main.c: 104: {
  1088                           ;main.c: 105: uint16_t result = adc;
  1089  0678  0877               	movf	mapToDegF@adc+1,w
  1090  0679  01FB               	clrf	mapToDegF@result+1
  1091  067A  07FB               	addwf	mapToDegF@result+1,f
  1092  067B  0876               	movf	mapToDegF@adc,w
  1093  067C  01FA               	clrf	mapToDegF@result
  1094  067D  07FA               	addwf	mapToDegF@result,f
  1095                           
  1096                           ;main.c: 106: result *= 15;
  1097  067E  300F               	movlw	15
  1098  067F  00F0               	movwf	?___wmul
  1099  0680  3000               	movlw	0
  1100  0681  00F1               	movwf	?___wmul+1
  1101  0682  087B               	movf	mapToDegF@result+1,w
  1102  0683  01F3               	clrf	?___wmul+3
  1103  0684  07F3               	addwf	?___wmul+3,f
  1104  0685  087A               	movf	mapToDegF@result,w
  1105  0686  01F2               	clrf	?___wmul+2
  1106  0687  07F2               	addwf	?___wmul+2,f
  1107  0688  25B2               	fcall	___wmul
  1108  0689  0871               	movf	?___wmul+1,w
  1109  068A  01FB               	clrf	mapToDegF@result+1
  1110  068B  07FB               	addwf	mapToDegF@result+1,f
  1111  068C  0870               	movf	?___wmul,w
  1112  068D  01FA               	clrf	mapToDegF@result
  1113  068E  07FA               	addwf	mapToDegF@result,f
  1114                           
  1115                           ;main.c: 107: result *= -1;
  1116  068F  30FF               	movlw	255
  1117  0690  00F0               	movwf	?___wmul
  1118  0691  30FF               	movlw	255
  1119  0692  00F1               	movwf	?___wmul+1
  1120  0693  087B               	movf	mapToDegF@result+1,w
  1121  0694  01F3               	clrf	?___wmul+3
  1122  0695  07F3               	addwf	?___wmul+3,f
  1123  0696  087A               	movf	mapToDegF@result,w
  1124  0697  01F2               	clrf	?___wmul+2
  1125  0698  07F2               	addwf	?___wmul+2,f
  1126  0699  25B2               	fcall	___wmul
  1127  069A  0871               	movf	?___wmul+1,w
  1128  069B  01FB               	clrf	mapToDegF@result+1
  1129  069C  07FB               	addwf	mapToDegF@result+1,f
  1130  069D  0870               	movf	?___wmul,w
  1131  069E  01FA               	clrf	mapToDegF@result
  1132  069F  07FA               	addwf	mapToDegF@result,f
  1133                           
  1134                           ;main.c: 108: result += 19826;
  1135  06A0  3072               	movlw	114
  1136  06A1  07FA               	addwf	mapToDegF@result,f
  1137  06A2  1803               	skipnc
  1138  06A3  0AFB               	incf	mapToDegF@result+1,f
  1139  06A4  304D               	movlw	77
  1140  06A5  07FB               	addwf	mapToDegF@result+1,f
  1141                           
  1142                           ;main.c: 109: result = (result>>6);
  1143  06A6  087B               	movf	mapToDegF@result+1,w
  1144  06A7  00F9               	movwf	??_mapToDegF+1
  1145  06A8  087A               	movf	mapToDegF@result,w
  1146  06A9  00F8               	movwf	??_mapToDegF
  1147  06AA  3006               	movlw	6
  1148  06AB                     u455:	
  1149  06AB  1003               	clrc
  1150  06AC  0CF9               	rrf	??_mapToDegF+1,f
  1151  06AD  0CF8               	rrf	??_mapToDegF,f
  1152  06AE  3EFF               	addlw	-1
  1153  06AF  1D03               	skipz
  1154  06B0  2EAB               	goto	u455
  1155  06B1  0878               	movf	??_mapToDegF,w
  1156  06B2  00FA               	movwf	mapToDegF@result
  1157  06B3  0879               	movf	??_mapToDegF+1,w
  1158  06B4  00FB               	movwf	mapToDegF@result+1
  1159                           
  1160                           ;main.c: 110: return (uint8_t)result;
  1161  06B5  087A               	movf	mapToDegF@result,w
  1162  06B6  0008               	return
  1163  06B7                     __end_of_mapToDegF:	
  1164                           
  1165                           	psect	text6
  1166  05B2                     __ptext6:	
  1167 ;; *************** function ___wmul *****************
  1168 ;; Defined at:
  1169 ;;		line 3 in file "D:\Program Files\Microchip\xc8\v1.21\sources\pic\wmul.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  multiplier      2    0[COMMON] unsigned int 
  1172 ;;  multiplicand    2    2[COMMON] unsigned int 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  product         2    4[COMMON] unsigned int 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  2    0[COMMON] unsigned int 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1
  1184 ;;      Params:         4       0       0
  1185 ;;      Locals:         2       0       0
  1186 ;;      Temps:          0       0       0
  1187 ;;      Totals:         6       0       0
  1188 ;;Total ram usage:        6 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_mapToDegF
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           
  1198                           ;psect for function ___wmul
  1199  05B2                     ___wmul:	
  1200                           
  1201                           ;incstack = 0
  1202                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1203  05B2  01F4               	clrf	___wmul@product
  1204  05B3  01F5               	clrf	___wmul@product+1
  1205  05B4                     l854:	
  1206  05B4  1C70               	btfss	___wmul@multiplier,0
  1207  05B5  2DBC               	goto	l514
  1208  05B6  0872               	movf	___wmul@multiplicand,w
  1209  05B7  07F4               	addwf	___wmul@product,f
  1210  05B8  1803               	skipnc
  1211  05B9  0AF5               	incf	___wmul@product+1,f
  1212  05BA  0873               	movf	___wmul@multiplicand+1,w
  1213  05BB  07F5               	addwf	___wmul@product+1,f
  1214  05BC                     l514:	
  1215  05BC  3001               	movlw	1
  1216  05BD                     u395:	
  1217  05BD  1003               	clrc
  1218  05BE  0DF2               	rlf	___wmul@multiplicand,f
  1219  05BF  0DF3               	rlf	___wmul@multiplicand+1,f
  1220  05C0  3EFF               	addlw	-1
  1221  05C1  1D03               	skipz
  1222  05C2  2DBD               	goto	u395
  1223  05C3  3001               	movlw	1
  1224  05C4                     u405:	
  1225  05C4  1003               	clrc
  1226  05C5  0CF1               	rrf	___wmul@multiplier+1,f
  1227  05C6  0CF0               	rrf	___wmul@multiplier,f
  1228  05C7  3EFF               	addlw	-1
  1229  05C8  1D03               	skipz
  1230  05C9  2DC4               	goto	u405
  1231  05CA  0871               	movf	___wmul@multiplier+1,w
  1232  05CB  0470               	iorwf	___wmul@multiplier,w
  1233  05CC  1D03               	skipz
  1234  05CD  2DB4               	goto	l854
  1235  05CE  0875               	movf	___wmul@product+1,w
  1236  05CF  01F1               	clrf	?___wmul+1
  1237  05D0  07F1               	addwf	?___wmul+1,f
  1238  05D1  0874               	movf	___wmul@product,w
  1239  05D2  01F0               	clrf	?___wmul
  1240  05D3  07F0               	addwf	?___wmul,f
  1241  05D4  0008               	return
  1242  05D5                     __end_of___wmul:	
  1243                           
  1244                           	psect	text7
  1245  05D5                     __ptext7:	
  1246 ;; *************** function _readADC *****************
  1247 ;; Defined at:
  1248 ;;		line 80 in file "D:/Programming/LocalGit/FanController/FanController.X/main.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;		None
  1251 ;; Auto vars:     Size  Location     Type
  1252 ;;  result          2    4[COMMON] unsigned int 
  1253 ;; Return value:  Size  Location     Type
  1254 ;;                  2    0[COMMON] unsigned int 
  1255 ;; Registers used:
  1256 ;;		wreg, status,2, status,0, btemp+1
  1257 ;; Tracked objects:
  1258 ;;		On entry : 0/0
  1259 ;;		On exit  : 0/0
  1260 ;;		Unchanged: 0/0
  1261 ;; Data sizes:     COMMON   BANK0   BANK1
  1262 ;;      Params:         2       0       0
  1263 ;;      Locals:         2       0       0
  1264 ;;      Temps:          2       0       0
  1265 ;;      Totals:         6       0       0
  1266 ;;Total ram usage:        6 bytes
  1267 ;; Hardware stack levels used:    1
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _readADC
  1277  05D5                     _readADC:	
  1278                           
  1279                           ;main.c: 81: uint16_t result = 0;
  1280                           
  1281                           ;incstack = 0
  1282                           ; Regs used in _readADC: [wreg+status,2+status,0+btemp+1]
  1283  05D5  01F4               	clrf	readADC@result
  1284  05D6  01F5               	clrf	readADC@result+1
  1285                           
  1286                           ;main.c: 82: ADCON0bits.GO_DONE = 1;
  1287  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  1288  05D8  149F               	bsf	31,1	;volatile
  1289  05D9                     l50:	
  1290                           ;main.c: 83: while(ADCON0bits.GO_DONE)
  1291                           
  1292  05D9  1283               	bcf	3,5	;RP0=0, select bank0
  1293  05DA  1C9F               	btfss	31,1	;volatile
  1294  05DB  2DDE               	goto	l868
  1295                           
  1296                           ;main.c: 84: {
  1297                           ;main.c: 85: _nop();
  1298  05DC  0000               	nop
  1299  05DD  2DD9               	goto	l50
  1300  05DE                     l868:	
  1301                           
  1302                           ;main.c: 86: }
  1303                           ;main.c: 87: result = ADRESL;
  1304  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  1305  05DF  081E               	movf	30,w	;volatile
  1306  05E0  00F2               	movwf	??_readADC
  1307  05E1  01F3               	clrf	??_readADC+1
  1308  05E2  0872               	movf	??_readADC,w
  1309  05E3  00F4               	movwf	readADC@result
  1310  05E4  0873               	movf	??_readADC+1,w
  1311  05E5  00F5               	movwf	readADC@result+1
  1312                           
  1313                           ;main.c: 88: result += (((uint16_t)ADRESH)<<8);
  1314  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  1315  05E7  081E               	movf	30,w	;volatile
  1316  05E8  00F2               	movwf	??_readADC
  1317  05E9  01F3               	clrf	??_readADC+1
  1318  05EA  0872               	movf	??_readADC,w
  1319  05EB  00F3               	movwf	??_readADC+1
  1320  05EC  01F2               	clrf	??_readADC
  1321  05ED  0872               	movf	??_readADC,w
  1322  05EE  07F4               	addwf	readADC@result,f
  1323  05EF  1803               	skipnc
  1324  05F0  0AF5               	incf	readADC@result+1,f
  1325  05F1  0873               	movf	??_readADC+1,w
  1326  05F2  07F5               	addwf	readADC@result+1,f
  1327                           
  1328                           ;main.c: 90: return result;
  1329  05F3  0875               	movf	readADC@result+1,w
  1330  05F4  01F1               	clrf	?_readADC+1
  1331  05F5  07F1               	addwf	?_readADC+1,f
  1332  05F6  0874               	movf	readADC@result,w
  1333  05F7  01F0               	clrf	?_readADC
  1334  05F8  07F0               	addwf	?_readADC,f
  1335  05F9  0008               	return
  1336  05FA                     __end_of_readADC:	
  1337                           
  1338                           	psect	text8
  1339  059E                     __ptext8:	
  1340 ;; *************** function _SetupPWM *****************
  1341 ;; Defined at:
  1342 ;;		line 68 in file "D:/Programming/LocalGit/FanController/FanController.X/main.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;		None
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;		None
  1347 ;; Return value:  Size  Location     Type
  1348 ;;		None               void
  1349 ;; Registers used:
  1350 ;;		wreg, status,2, status,0
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1
  1356 ;;      Params:         0       0       0
  1357 ;;      Locals:         0       0       0
  1358 ;;      Temps:          0       0       0
  1359 ;;      Totals:         0       0       0
  1360 ;;Total ram usage:        0 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_main
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _SetupPWM
  1371  059E                     _SetupPWM:	
  1372                           
  1373                           ;main.c: 69: T2CONbits.TOUTPS = 0;
  1374                           
  1375                           ;incstack = 0
  1376                           ; Regs used in _SetupPWM: [wreg+status,2+status,0]
  1377  059E  3087               	movlw	-121
  1378  059F  1283               	bcf	3,5	;RP0=0, select bank0
  1379  05A0  0592               	andwf	18,f	;volatile
  1380                           
  1381                           ;main.c: 70: T2CONbits.T2CKPS = 0;
  1382  05A1  30FC               	movlw	-4
  1383  05A2  0592               	andwf	18,f	;volatile
  1384                           
  1385                           ;main.c: 71: T2CONbits.TMR2ON = 1;
  1386  05A3  1512               	bsf	18,2	;volatile
  1387                           
  1388                           ;main.c: 72: TRISIObits.TRISIO2 = 0;
  1389  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  1390  05A5  1105               	bcf	5,2	;volatile
  1391                           
  1392                           ;main.c: 73: CCP1CONbits.CCP1M = 0b00001100;
  1393  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1394  05A7  0815               	movf	21,w	;volatile
  1395  05A8  39F0               	andlw	-16
  1396  05A9  380C               	iorlw	12
  1397  05AA  0095               	movwf	21	;volatile
  1398                           
  1399                           ;main.c: 74: CCP1CONbits.DC1B = 0;
  1400  05AB  30CF               	movlw	-49
  1401  05AC  0595               	andwf	21,f	;volatile
  1402                           
  1403                           ;main.c: 75: CCPR1L = 0;
  1404  05AD  0193               	clrf	19	;volatile
  1405                           
  1406                           ;main.c: 76: PR2 = 0xFF;
  1407  05AE  30FF               	movlw	255
  1408  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  1409  05B0  0092               	movwf	18	;volatile
  1410  05B1  0008               	return
  1411  05B2                     __end_of_SetupPWM:	
  1412                           
  1413                           	psect	text9
  1414  0582                     __ptext9:	
  1415 ;; *************** function _SetupADC *****************
  1416 ;; Defined at:
  1417 ;;		line 59 in file "D:/Programming/LocalGit/FanController/FanController.X/main.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;		None
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;		None
  1422 ;; Return value:  Size  Location     Type
  1423 ;;		None               void
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1
  1431 ;;      Params:         0       0       0
  1432 ;;      Locals:         0       0       0
  1433 ;;      Temps:          0       0       0
  1434 ;;      Totals:         0       0       0
  1435 ;;Total ram usage:        0 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; This function calls:
  1438 ;;		Nothing
  1439 ;; This function is called by:
  1440 ;;		_main
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           
  1445                           ;psect for function _SetupADC
  1446  0582                     _SetupADC:	
  1447                           
  1448                           ;main.c: 60: ANSELbits.ADCS = 0b00000110;
  1449                           
  1450                           ;incstack = 0
  1451                           ; Regs used in _SetupADC: [wreg+status,2+status,0]
  1452  0582  1683               	bsf	3,5	;RP0=1, select bank1
  1453  0583  081F               	movf	31,w	;volatile
  1454  0584  398F               	andlw	-113
  1455  0585  3860               	iorlw	96
  1456  0586  009F               	movwf	31	;volatile
  1457                           
  1458                           ;main.c: 61: ADCON0bits.ADFM = 1;
  1459  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1460  0588  179F               	bsf	31,7	;volatile
  1461                           
  1462                           ;main.c: 62: ADCON0bits.VCFG = 0;
  1463  0589  131F               	bcf	31,6	;volatile
  1464                           
  1465                           ;main.c: 63: ADCON0bits.CHS = 0;
  1466  058A  30F3               	movlw	-13
  1467  058B  059F               	andwf	31,f	;volatile
  1468                           
  1469                           ;main.c: 64: ADCON0bits.ADON = 1;
  1470  058C  141F               	bsf	31,0	;volatile
  1471  058D  0008               	return
  1472  058E                     __end_of_SetupADC:	
  1473                           
  1474                           	psect	text10
  1475  0577                     __ptext10:	
  1476 ;; *************** function _SetupPinIO *****************
  1477 ;; Defined at:
  1478 ;;		line 46 in file "D:/Programming/LocalGit/FanController/FanController.X/main.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;		None
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;		None
  1483 ;; Return value:  Size  Location     Type
  1484 ;;		None               void
  1485 ;; Registers used:
  1486 ;;		None
  1487 ;; Tracked objects:
  1488 ;;		On entry : 0/0
  1489 ;;		On exit  : 0/0
  1490 ;;		Unchanged: 0/0
  1491 ;; Data sizes:     COMMON   BANK0   BANK1
  1492 ;;      Params:         0       0       0
  1493 ;;      Locals:         0       0       0
  1494 ;;      Temps:          0       0       0
  1495 ;;      Totals:         0       0       0
  1496 ;;Total ram usage:        0 bytes
  1497 ;; Hardware stack levels used:    1
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           
  1505                           
  1506                           ;psect for function _SetupPinIO
  1507  0577                     _SetupPinIO:	
  1508                           
  1509                           ;main.c: 47: ANSELbits.ANS0 = 1;
  1510                           
  1511                           ;incstack = 0
  1512                           ; Regs used in _SetupPinIO: []
  1513  0577  1683               	bsf	3,5	;RP0=1, select bank1
  1514  0578  141F               	bsf	31,0	;volatile
  1515                           
  1516                           ;main.c: 48: ANSELbits.ANS1 = 0;
  1517  0579  109F               	bcf	31,1	;volatile
  1518                           
  1519                           ;main.c: 49: ANSELbits.ANS2 = 0;
  1520  057A  111F               	bcf	31,2	;volatile
  1521                           
  1522                           ;main.c: 50: ANSELbits.ANS3 = 0;
  1523  057B  119F               	bcf	31,3	;volatile
  1524                           
  1525                           ;main.c: 51: TRISIObits.TRISIO0 = 1;
  1526  057C  1405               	bsf	5,0	;volatile
  1527                           
  1528                           ;main.c: 52: TRISIObits.TRISIO1 = 0;
  1529  057D  1085               	bcf	5,1	;volatile
  1530                           
  1531                           ;main.c: 53: TRISIObits.TRISIO2 = 0;
  1532  057E  1105               	bcf	5,2	;volatile
  1533                           
  1534                           ;main.c: 54: TRISIObits.TRISIO4 = 0;
  1535  057F  1205               	bcf	5,4	;volatile
  1536                           
  1537                           ;main.c: 55: TRISIObits.TRISIO5 = 0;
  1538  0580  1285               	bcf	5,5	;volatile
  1539  0581  0008               	return
  1540  0582                     __end_of_SetupPinIO:	
  1541                           
  1542                           	psect	text11
  1543  058E                     __ptext11:	
  1544 ;; *************** function _SetupOscillator *****************
  1545 ;; Defined at:
  1546 ;;		line 36 in file "D:/Programming/LocalGit/FanController/FanController.X/main.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;		None
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;		None               void
  1553 ;; Registers used:
  1554 ;;		wreg, status,2, status,0
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0   BANK1
  1560 ;;      Params:         0       0       0
  1561 ;;      Locals:         0       0       0
  1562 ;;      Temps:          0       0       0
  1563 ;;      Totals:         0       0       0
  1564 ;;Total ram usage:        0 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _SetupOscillator
  1575  058E                     _SetupOscillator:	
  1576                           
  1577                           ;main.c: 37: OSCCONbits.IRCF = 0b00000110;
  1578                           
  1579                           ;incstack = 0
  1580                           ; Regs used in _SetupOscillator: [wreg+status,2+status,0]
  1581  058E  1683               	bsf	3,5	;RP0=1, select bank1
  1582  058F  080F               	movf	15,w	;volatile
  1583  0590  398F               	andlw	-113
  1584  0591  3860               	iorlw	96
  1585  0592  008F               	movwf	15	;volatile
  1586                           
  1587                           ;main.c: 38: OSCCONbits.OSTS = 0;
  1588  0593  118F               	bcf	15,3	;volatile
  1589                           
  1590                           ;main.c: 39: OSCCONbits.SCS = 1;
  1591  0594  140F               	bsf	15,0	;volatile
  1592                           
  1593                           ;main.c: 40: WDTCONbits.WDTPS = 0b00000101;
  1594  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0596  0818               	movf	24,w	;volatile
  1596  0597  39E1               	andlw	-31
  1597  0598  380A               	iorlw	10
  1598  0599  0098               	movwf	24	;volatile
  1599  059A                     l35:	
  1600                           ;main.c: 42: while(!OSCCONbits.HTS) {}
  1601                           
  1602  059A  1683               	bsf	3,5	;RP0=1, select bank1
  1603  059B  190F               	btfsc	15,2	;volatile
  1604  059C  0008               	return
  1605  059D  2D9A               	goto	l35
  1606  059E                     __end_of_SetupOscillator:	
  1607  007E                     btemp	set	126	;btemp
  1608  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     33      40
    BANK1            32      0       0

Pointer List with Targets:

    ?_getFanSpeed	unsigned int  size(1) Largest target is 0

    ?___lmul	unsigned long  size(1) Largest target is 0

    ?___lldiv	unsigned long  size(1) Largest target is 0

    ?___wmul	unsigned int  size(1) Largest target is 0

    ?_readADC	unsigned int  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _getFanSpeed->___lldiv
    ___lldiv->___lmul
    _mapToDegF->___wmul

Critical Paths under _main in BANK0

    _main->_getFanSpeed
    _getFanSpeed->___lldiv

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4     824
                                             28 BANK0      5     1      4
                    _SetupOscillator
                         _SetupPinIO
                           _SetupADC
                           _SetupPWM
                            _readADC
                          _mapToDegF
                        _getFanSpeed
                        _rampToSpeed
 ---------------------------------------------------------------------------------
 (1) _rampToSpeed                                         10     8      2     158
                                              0 COMMON    10     8      2
 ---------------------------------------------------------------------------------
 (1) _getFanSpeed                                         15    13      2     390
                                             13 BANK0     15    13      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8      92
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     162
                                             13 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _mapToDegF                                            6     4      2     251
                                              6 COMMON     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4      92
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _readADC                                              6     4      2      25
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _SetupPWM                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupPinIO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SetupOscillator                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SetupOscillator
   _SetupPinIO
   _SetupADC
   _SetupPWM
   _readADC
   _mapToDegF
     ___wmul
   _getFanSpeed
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _rampToSpeed

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       2       2        0.0%
BITBANK0            50      0       0       3        0.0%
BANK0               50     21      28       4       50.0%
BANK1               20      0       0       5        0.0%
ABS                  0      0      36       6        0.0%
BITBANK1            20      0       0       7        0.0%
DATA                 0      0      38       8        0.0%


Microchip Technology PIC Macro Assembler V1.21 build 54009 
Symbol Table                                                                                   Sat Jul 30 11:06:15 2016

             __CFG_CP$OFF 0000                        l50 05D9                        l35 059A  
                      l73 06F1                        l78 0602       ___wmul@multiplicand 0072  
                     l514 05BC                       l910 0725                       l920 075D  
                     l912 0735                       l840 062F                       l834 06FF  
                     l924 076A                       l844 0645                       l940 07F0  
                     l932 078E                       l854 05B4                       l936 07D8  
                     l868 05DE                       l892 0678                       l884 066F  
                     u315 06E9                       u405 05C4                       u325 06F7  
                     _PR2 0092                       u505 074C              __CFG_CPD$OFF 0000  
                     u515 075E                       u355 0647                       u365 064F  
                     u550 07C5                       u455 06AB                       u551 07C6  
                     u552 07CB                       u553 07CC                       u395 05BD  
                     u475 0729                       u565 07E6                       u495 0737  
            __CFG_IESO$ON 0000   __end_of_SetupOscillator 059E              __CFG_WDTE$ON 0000  
           __CFG_FCMEN$ON 0000                      _main 05FA                      btemp 007E  
           __CFG_BOREN$ON 0000                      start 0000              mapToDegF@adc 0076  
                   ?_main 003C           __end_of___lldiv 0773       ___lmul@multiplicand 0074  
         __end_of_readADC 05FA                     status 0003                     wtemp0 007E  
            ?_rampToSpeed 0070            __CFG_MCLRE$OFF 0000           __initialization 07F7  
            __end_of_main 0627      __size_of_getFanSpeed 0084                    ??_main 0040  
        __end_of_SetupADC 058E          __end_of_SetupPWM 05B2          ?_SetupOscillator 0070  
                  _ADRESH 001E                    _ADRESL 009E                    _CCPR1L 0013  
          __CFG_PWRTE$OFF 0000                    ___lmul 0627                    ___wmul 05B2  
               ??___lldiv 007D                _SetupPinIO 0577                 ??_readADC 0072  
 __end_of__initialization 07FE            __pcstackCOMMON 0070        __size_of_mapToDegF 0051  
              __pbssBANK0 0041                __pmaintext 05FA                 ?_SetupADC 0070  
               ?_SetupPWM 0070                   ?___lmul 0070      __size_of_rampToSpeed 005D  
         getFanSpeed@temp 0033                   ?___wmul 0070               ?_SetupPinIO 0070  
          ___lmul@product 0079       getFanSpeed@fanSpeed 0037                ??_SetupADC 0070  
              ??_SetupPWM 0070         __end_of_mapToDegF 06B7           __size_of___lmul 003F  
                 ___lldiv 0714           __size_of___wmul 0023                 _ANSELbits 009F  
           readADC@result 0074                   __ptext0 0000                   __ptext1 06B7  
                 __ptext2 0773                   __ptext3 0627                   __ptext4 0714  
                 __ptext5 0666                   __ptext6 05B2                   __ptext7 05D5  
                 __ptext8 059E                   __ptext9 0582                   _readADC 05D5  
               _T2CONbits 0012      end_of_initialization 07FE       __size_of_SetupPinIO 000B  
         ___lldiv@divisor 0020             ??_getFanSpeed 002F           ___lldiv@counter 002C  
      rampToSpeed@command 0076               _CCP1CONbits 0015  __size_of_SetupOscillator 0010  
 rampToSpeed@currentSpeed 0078            __end_of___lmul 0666            __end_of___wmul 05D5  
     __end_of_getFanSpeed 07F7       start_initialization 07F7                  ??___lmul 0078  
                ??___wmul 0074         __size_of_SetupADC 000C         __size_of_SetupPWM 0014  
            ??_SetupPinIO 0070             __pcstackBANK0 0020               _delayLooper 0043  
      __end_of_SetupPinIO 0582             ??_rampToSpeed 0072               _getFanSpeed 0773  
       ??_SetupOscillator 0070                  ?___lldiv 0020          getFanSpeed@tempF 003B  
               _mapToDegF 0666                  ?_readADC 0070           mapToDegF@result 007A  
          ___wmul@product 0074                  _GPIObits 0005       __end_of_rampToSpeed 0714  
              ?_mapToDegF 0076                _ADCON0bits 001F         ___wmul@multiplier 0070  
       ___lmul@multiplier 0070                  _SetupADC 0582                  _SetupPWM 059E  
        __size_of___lldiv 005F                  _adcValue 0041          __size_of_readADC 0025  
                _fanSpeed 0045                  __ptext10 0577                  __ptext11 058E  
           __size_of_main 002D    rampToSpeed@targetSpeed 0070               _rampToSpeed 06B7  
                _tempDegF 0047                  main@argc 003C                  main@argv 003E  
             ??_mapToDegF 0078           _SetupOscillator 058E          ___lldiv@dividend 0024  
            ?_getFanSpeed 002D                _OSCCONbits 008F          ___lldiv@quotient 0028  
              _WDTCONbits 0018        __CFG_FOSC$INTOSCIO 0000                _TRISIObits 0085  
